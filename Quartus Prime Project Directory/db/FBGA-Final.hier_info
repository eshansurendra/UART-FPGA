|uart
data_in[0] => data_input[0].IN1
data_in[1] => data_input[1].IN1
data_in[2] => data_input[2].IN1
data_in[3] => data_input[3].IN1
data_en => data_en.IN1
clk => clk.IN2
rstn => rstn.IN2
tx << transmitter:uart_tx.tx
tx_busy << transmitter:uart_tx.tx_busy
ready_clr => ready_clr.IN1
rx => rx.IN1
ready << receiver:uart_rx.ready
led_out[0] << data_output[0].DB_MAX_OUTPUT_PORT_TYPE
led_out[1] << data_output[1].DB_MAX_OUTPUT_PORT_TYPE
led_out[2] << data_output[2].DB_MAX_OUTPUT_PORT_TYPE
led_out[3] << data_output[3].DB_MAX_OUTPUT_PORT_TYPE
led_out[4] << receiver:uart_rx.data_out
led_out[5] << receiver:uart_rx.data_out
led_out[6] << receiver:uart_rx.data_out
led_out[7] << receiver:uart_rx.data_out
display_out[0] << binary_to_7seg:converter.data_out
display_out[1] << binary_to_7seg:converter.data_out
display_out[2] << binary_to_7seg:converter.data_out
display_out[3] << binary_to_7seg:converter.data_out
display_out[4] << binary_to_7seg:converter.data_out
display_out[5] << binary_to_7seg:converter.data_out
display_out[6] << binary_to_7seg:converter.data_out


|uart|transmitter:uart_tx
data_in[0] => data.DATAB
data_in[1] => data.DATAB
data_in[2] => data.DATAB
data_in[3] => data.DATAB
data_in[4] => data.DATAB
data_in[5] => data.DATAB
data_in[6] => data.DATAB
data_in[7] => data.DATAB
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => state.OUTPUTSELECT
data_en => data.OUTPUTSELECT
data_en => data.OUTPUTSELECT
data_en => data.OUTPUTSELECT
data_en => data.OUTPUTSELECT
data_en => data.OUTPUTSELECT
data_en => data.OUTPUTSELECT
data_en => data.OUTPUTSELECT
data_en => data.OUTPUTSELECT
data_en => c_bits.OUTPUTSELECT
data_en => c_bits.OUTPUTSELECT
data_en => c_bits.OUTPUTSELECT
data_en => c_clocks.OUTPUTSELECT
data_en => c_clocks.OUTPUTSELECT
data_en => c_clocks.OUTPUTSELECT
data_en => c_clocks.OUTPUTSELECT
data_en => c_clocks.OUTPUTSELECT
data_en => c_clocks.OUTPUTSELECT
data_en => c_clocks.OUTPUTSELECT
data_en => c_clocks.OUTPUTSELECT
data_en => c_clocks.OUTPUTSELECT
data_en => c_clocks.OUTPUTSELECT
data_en => c_clocks.OUTPUTSELECT
data_en => c_clocks.OUTPUTSELECT
data_en => c_clocks.OUTPUTSELECT
data_en => tx.OUTPUTSELECT
clk => state[0].CLK
clk => state[1].CLK
clk => state[2].CLK
clk => state[3].CLK
clk => state[4].CLK
clk => state[5].CLK
clk => state[6].CLK
clk => state[7].CLK
clk => state[8].CLK
clk => state[9].CLK
clk => state[10].CLK
clk => state[11].CLK
clk => state[12].CLK
clk => state[13].CLK
clk => state[14].CLK
clk => state[15].CLK
clk => state[16].CLK
clk => state[17].CLK
clk => state[18].CLK
clk => state[19].CLK
clk => state[20].CLK
clk => state[21].CLK
clk => state[22].CLK
clk => state[23].CLK
clk => state[24].CLK
clk => state[25].CLK
clk => state[26].CLK
clk => state[27].CLK
clk => state[28].CLK
clk => state[29].CLK
clk => state[30].CLK
clk => state[31].CLK
clk => tx~reg0.CLK
clk => data[0].CLK
clk => data[1].CLK
clk => data[2].CLK
clk => data[3].CLK
clk => data[4].CLK
clk => data[5].CLK
clk => data[6].CLK
clk => data[7].CLK
clk => c_bits[0].CLK
clk => c_bits[1].CLK
clk => c_bits[2].CLK
clk => c_clocks[0].CLK
clk => c_clocks[1].CLK
clk => c_clocks[2].CLK
clk => c_clocks[3].CLK
clk => c_clocks[4].CLK
clk => c_clocks[5].CLK
clk => c_clocks[6].CLK
clk => c_clocks[7].CLK
clk => c_clocks[8].CLK
clk => c_clocks[9].CLK
clk => c_clocks[10].CLK
clk => c_clocks[11].CLK
clk => c_clocks[12].CLK
rstn => state[0].ACLR
rstn => state[1].ACLR
rstn => state[2].ACLR
rstn => state[3].ACLR
rstn => state[4].ACLR
rstn => state[5].ACLR
rstn => state[6].ACLR
rstn => state[7].ACLR
rstn => state[8].ACLR
rstn => state[9].ACLR
rstn => state[10].ACLR
rstn => state[11].ACLR
rstn => state[12].ACLR
rstn => state[13].ACLR
rstn => state[14].ACLR
rstn => state[15].ACLR
rstn => state[16].ACLR
rstn => state[17].ACLR
rstn => state[18].ACLR
rstn => state[19].ACLR
rstn => state[20].ACLR
rstn => state[21].ACLR
rstn => state[22].ACLR
rstn => state[23].ACLR
rstn => state[24].ACLR
rstn => state[25].ACLR
rstn => state[26].ACLR
rstn => state[27].ACLR
rstn => state[28].ACLR
rstn => state[29].ACLR
rstn => state[30].ACLR
rstn => state[31].ACLR
rstn => tx~reg0.PRESET
rstn => data[0].ACLR
rstn => data[1].ACLR
rstn => data[2].ACLR
rstn => data[3].ACLR
rstn => data[4].ACLR
rstn => data[5].ACLR
rstn => data[6].ACLR
rstn => data[7].ACLR
rstn => c_bits[0].ACLR
rstn => c_bits[1].ACLR
rstn => c_bits[2].ACLR
rstn => c_clocks[0].ACLR
rstn => c_clocks[1].ACLR
rstn => c_clocks[2].ACLR
rstn => c_clocks[3].ACLR
rstn => c_clocks[4].ACLR
rstn => c_clocks[5].ACLR
rstn => c_clocks[6].ACLR
rstn => c_clocks[7].ACLR
rstn => c_clocks[8].ACLR
rstn => c_clocks[9].ACLR
rstn => c_clocks[10].ACLR
rstn => c_clocks[11].ACLR
rstn => c_clocks[12].ACLR
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_busy <= Equal6.DB_MAX_OUTPUT_PORT_TYPE


|uart|receiver:uart_rx
clk => rx_sync.CLK
clk => state[0].CLK
clk => state[1].CLK
clk => state[2].CLK
clk => state[3].CLK
clk => state[4].CLK
clk => state[5].CLK
clk => state[6].CLK
clk => state[7].CLK
clk => state[8].CLK
clk => state[9].CLK
clk => state[10].CLK
clk => state[11].CLK
clk => state[12].CLK
clk => state[13].CLK
clk => state[14].CLK
clk => state[15].CLK
clk => state[16].CLK
clk => state[17].CLK
clk => state[18].CLK
clk => state[19].CLK
clk => state[20].CLK
clk => state[21].CLK
clk => state[22].CLK
clk => state[23].CLK
clk => state[24].CLK
clk => state[25].CLK
clk => state[26].CLK
clk => state[27].CLK
clk => state[28].CLK
clk => state[29].CLK
clk => state[30].CLK
clk => state[31].CLK
clk => ready~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => c_bits[0].CLK
clk => c_bits[1].CLK
clk => c_bits[2].CLK
clk => c_clocks[0].CLK
clk => c_clocks[1].CLK
clk => c_clocks[2].CLK
clk => c_clocks[3].CLK
clk => c_clocks[4].CLK
clk => c_clocks[5].CLK
clk => c_clocks[6].CLK
clk => c_clocks[7].CLK
clk => c_clocks[8].CLK
clk => c_clocks[9].CLK
clk => c_clocks[10].CLK
clk => c_clocks[11].CLK
clk => c_clocks[12].CLK
rstn => state[0].ACLR
rstn => state[1].ACLR
rstn => state[2].ACLR
rstn => state[3].ACLR
rstn => state[4].ACLR
rstn => state[5].ACLR
rstn => state[6].ACLR
rstn => state[7].ACLR
rstn => state[8].ACLR
rstn => state[9].ACLR
rstn => state[10].ACLR
rstn => state[11].ACLR
rstn => state[12].ACLR
rstn => state[13].ACLR
rstn => state[14].ACLR
rstn => state[15].ACLR
rstn => state[16].ACLR
rstn => state[17].ACLR
rstn => state[18].ACLR
rstn => state[19].ACLR
rstn => state[20].ACLR
rstn => state[21].ACLR
rstn => state[22].ACLR
rstn => state[23].ACLR
rstn => state[24].ACLR
rstn => state[25].ACLR
rstn => state[26].ACLR
rstn => state[27].ACLR
rstn => state[28].ACLR
rstn => state[29].ACLR
rstn => state[30].ACLR
rstn => state[31].ACLR
rstn => ready~reg0.ACLR
rstn => temp_data[0].ACLR
rstn => temp_data[1].ACLR
rstn => temp_data[2].ACLR
rstn => temp_data[3].ACLR
rstn => temp_data[4].ACLR
rstn => temp_data[5].ACLR
rstn => temp_data[6].ACLR
rstn => temp_data[7].ACLR
rstn => c_bits[0].ACLR
rstn => c_bits[1].ACLR
rstn => c_bits[2].ACLR
rstn => c_clocks[0].ACLR
rstn => c_clocks[1].ACLR
rstn => c_clocks[2].ACLR
rstn => c_clocks[3].ACLR
rstn => c_clocks[4].ACLR
rstn => c_clocks[5].ACLR
rstn => c_clocks[6].ACLR
rstn => c_clocks[7].ACLR
rstn => c_clocks[8].ACLR
rstn => c_clocks[9].ACLR
rstn => c_clocks[10].ACLR
rstn => c_clocks[11].ACLR
rstn => c_clocks[12].ACLR
rstn => rx_sync.ENA
ready_clr => ~NO_FANOUT~
rx => rx_sync.DATAIN
ready <= ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[0] <= temp_data[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= temp_data[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= temp_data[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= temp_data[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= temp_data[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= temp_data[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= temp_data[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= temp_data[7].DB_MAX_OUTPUT_PORT_TYPE


|uart|binary_to_7seg:converter
data_in[0] => Mux0.IN19
data_in[0] => Mux1.IN19
data_in[0] => Mux2.IN19
data_in[0] => Mux3.IN19
data_in[0] => Mux4.IN19
data_in[0] => Mux5.IN19
data_in[0] => Mux6.IN19
data_in[1] => Mux0.IN18
data_in[1] => Mux1.IN18
data_in[1] => Mux2.IN18
data_in[1] => Mux3.IN18
data_in[1] => Mux4.IN18
data_in[1] => Mux5.IN18
data_in[1] => Mux6.IN18
data_in[2] => Mux0.IN17
data_in[2] => Mux1.IN17
data_in[2] => Mux2.IN17
data_in[2] => Mux3.IN17
data_in[2] => Mux4.IN17
data_in[2] => Mux5.IN17
data_in[2] => Mux6.IN17
data_in[3] => Mux0.IN16
data_in[3] => Mux1.IN16
data_in[3] => Mux2.IN16
data_in[3] => Mux3.IN16
data_in[3] => Mux4.IN16
data_in[3] => Mux5.IN16
data_in[3] => Mux6.IN16
data_out[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


